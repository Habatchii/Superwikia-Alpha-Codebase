<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PerByte.Vsix.Core</name>
    </assembly>
    <members>
        <member name="T:PerByte.Vsix.Core.NuGet.NuGetConfiguration">
            <summary>
            Represents the NuGet configuration file.
            </summary>
        </member>
        <member name="F:PerByte.Vsix.Core.NuGet.NuGetConfiguration.document">
            <summary>
            Local storage for the actual XML document.
            </summary>
        </member>
        <member name="F:PerByte.Vsix.Core.NuGet.NuGetConfiguration.packageSources">
            <summary>
            Local storage for the wrapper on top of the package sources element.
            </summary>
        </member>
        <member name="M:PerByte.Vsix.Core.NuGet.NuGetConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PerByte.Vsix.Core.NuGet.NuGetConfiguration"/> class. Loads the default NuGet configuration file at <b>%APPDATA%\NuGet\NuGet.Config</b>.
            </summary>
        </member>
        <member name="M:PerByte.Vsix.Core.NuGet.NuGetConfiguration.#ctor(System.Xml.Linq.XDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:PerByte.Vsix.Core.NuGet.NuGetConfiguration"/> class with the specified document.
            </summary>
            <param name="document">The <see cref="T:System.Xml.Linq.XDocument"/> configuration file.</param>
        </member>
        <member name="M:PerByte.Vsix.Core.NuGet.NuGetConfiguration.Save">
            <summary>
            Saves the configuration file to the default NuGet configuration file location at <b>%APPDATA%\NuGet\NuGet.Config</b>.
            </summary>
        </member>
        <member name="P:PerByte.Vsix.Core.NuGet.NuGetConfiguration.PackageSources">
            <summary>
            Gets the strongly typed wrapper over the package sources.
            </summary>
        </member>
        <member name="T:PerByte.Vsix.Core.NuGet.PackageSource">
            <summary>
            Represents a NuGet package source.
            </summary>
        </member>
        <member name="P:PerByte.Vsix.Core.NuGet.PackageSource.Name">
            <summary>
            Gets or sets the name of the package source.
            </summary>
        </member>
        <member name="P:PerByte.Vsix.Core.NuGet.PackageSource.Value">
            <summary>
            Gets or sets the value of the package source.
            </summary>
        </member>
        <member name="T:PerByte.Vsix.Core.PackageBase">
            <summary>
            A convenient base class for VS packages.
            </summary>
        </member>
        <member name="F:PerByte.Vsix.Core.PackageBase.dte">
            <summary>
            Local storage for the DTE object.
            </summary>
        </member>
        <member name="M:PerByte.Vsix.Core.PackageBase.Initialize">
            <summary>
            Initialization of the package; this method is called right after the package is sited, so this is the place
            where you can put all the initialization code that rely on services provided by VisualStudio.
            </summary>
        </member>
        <member name="M:PerByte.Vsix.Core.PackageBase.InitializeCommands(Microsoft.VisualStudio.Shell.OleMenuCommandService)">
            <summary>
            A method for derived classes to add menus.
            </summary>
            <param name="menuCommandService">The <see cref="T:Microsoft.VisualStudio.Shell.OleMenuCommandService"/> for adding menus.</param>
        </member>
        <member name="P:PerByte.Vsix.Core.PackageBase.DTE">
            <summary>
            Gets the DTE object.
            </summary>
        </member>
        <member name="P:PerByte.Vsix.Core.PackageBase.MenuCommandService">
            <summary>
            Gets the <see cref="T:Microsoft.VisualStudio.Shell.OleMenuCommandService"/> from the package container.
            </summary>
            <returns>The <see cref="T:Microsoft.VisualStudio.Shell.OleMenuCommandService"/>.</returns>
        </member>
        <member name="T:PerByte.Vsix.Core.ProjectExtensions">
            <summary>
            Extension methods for Visual Studio Projects.
            </summary>
        </member>
        <member name="M:PerByte.Vsix.Core.ProjectExtensions.IsUnloaded(EnvDTE.Project)">
            <summary>
            Determines if this <see cref="T:EnvDTE.Project"/> is loaded.
            </summary>
            <param name="project">The <see cref="T:EnvDTE.Project"/> to check.</param>
            <returns>true if loaded; false otherwise.</returns>
        </member>
        <member name="M:PerByte.Vsix.Core.ProjectExtensions.IsSolutionFolder(EnvDTE.Project)">
            <summary>
            Determines if this <see cref="T:EnvDTE.Project"/> is a solution folder.
            </summary>
            <param name="project">The <see cref="T:EnvDTE.Project"/> to check.</param>
            <returns>true if the solution folder; false otherwise.</returns>
        </member>
        <member name="M:PerByte.Vsix.Core.ProjectExtensions.IsVisualBasic(EnvDTE.Project)">
            <summary>
            Determines if this <see cref="T:EnvDTE.Project"/> is a Visual Basic project.
            </summary>
            <param name="project">The <see cref="T:EnvDTE.Project"/> to check.</param>
            <returns>true if the project is Visual Basic; false otherwise.</returns>
        </member>
        <member name="M:PerByte.Vsix.Core.ProjectExtensions.Loaded(System.Collections.Generic.IEnumerable{EnvDTE.Project})">
            <summary>
            Filters an enumeration of Projects to those that are not unloaded.
            </summary>
            <param name="projects">The enumeration to filter.</param>
            <returns>The filtered enumeration.</returns>
        </member>
        <member name="M:PerByte.Vsix.Core.ProjectExtensions.IsActual(EnvDTE.Project)">
            <summary>
            Checks to see if the Project is an 'actual' project file.
            </summary>
            <param name="project">The Project to check.</param>
            <returns>true is an actual project; false otherwise.</returns>
        </member>
        <member name="M:PerByte.Vsix.Core.ProjectExtensions.Actual(System.Collections.Generic.IEnumerable{EnvDTE.Project})">
            <summary>
            Filters an enumeration of Projects to those that are actual projects.
            </summary>
            <param name="projects">The enumeration to filter.</param>
            <returns>The filtered enumeration.</returns>
        </member>
        <member name="M:PerByte.Vsix.Core.ProjectExtensions.ChildProjects(EnvDTE.Project)">
            <summary>
            Recursively provides an enumeration of a project's child Projects.
            </summary>
            <param name="project">The Project to enumerate.</param>
            <returns>An enumeration of child Projects.</returns>
        </member>
        <member name="M:PerByte.Vsix.Core.ProjectExtensions.All(EnvDTE.Project)">
            <summary>
            Recursively provides an enumeration of the Project and its Children.
            </summary>
            <param name="project">The Project.</param>
            <returns>The enumeration of all Projects.</returns>
        </member>
        <member name="M:PerByte.Vsix.Core.ProjectExtensions.All(System.Collections.Generic.IEnumerable{EnvDTE.Project})">
            <summary>
            Recursively provides an enumeration of all Projects and their Children.
            </summary>
            <param name="projects">The Projects to enumerate.</param>
            <returns>An enumeration of all Projects.</returns>
        </member>
        <member name="M:PerByte.Vsix.Core.ProjectExtensions.ProjectItems(EnvDTE.Project)">
            <summary>
            Sugar to provide enumerable ProjectItems.
            </summary>
            <param name="project">The Project to get the items.</param>
            <returns>An enumerable ProjectItems.</returns>
        </member>
        <member name="M:PerByte.Vsix.Core.ProjectExtensions.Properties(EnvDTE.Project)">
            <summary>
            Sugar to provide enumerable Properties.
            </summary>
            <param name="project">The Project to get the properties.</param>
            <returns>An enumerable Properties.</returns>
        </member>
        <member name="M:PerByte.Vsix.Core.ProjectExtensions.Configurations(EnvDTE.Project)">
            <summary>
            Sugar to provide enumerable Configurations.
            </summary>
            <param name="project">The Project to get the configurations.</param>
            <returns>An enumerable Configurations.</returns>
        </member>
        <member name="M:PerByte.Vsix.Core.ProjectExtensions.Properties(EnvDTE.Configuration)">
            <summary>
            Sugar to provide enumerable Properties.
            </summary>
            <param name="configuration">The Configuration to get the properties.</param>
            <returns>An enumerable Properties.</returns>
        </member>
        <member name="T:PerByte.Vsix.Core.SolutionExtensions">
            <summary>
            Extension methods for Visual Studio Solutions.
            </summary>
        </member>
        <member name="M:PerByte.Vsix.Core.SolutionExtensions.Projects(EnvDTE.Solution)">
            <summary>
            Provides a strongly typed enumeration of direct-child projects in the solution.
            </summary>
            <param name="solution">The Visual Studio Solution.</param>
            <returns>An enumeration of projects.</returns>
        </member>
        <member name="T:PerByte.Vsix.Core.ProjectKinds">
            <summary>
            Constant IDs for kinds of projects..
            </summary>
        </member>
        <member name="F:PerByte.Vsix.Core.ProjectKinds.UnloadedProject">
            <summary>
            The GUID for all unloaded projects.
            </summary>
        </member>
        <member name="F:PerByte.Vsix.Core.ProjectKinds.SolutionFolder">
            <summary>
            The GUID for the solution folder.
            </summary>
        </member>
        <member name="F:PerByte.Vsix.Core.ProjectKinds.VisualBasicProject">
            <summary>
            The GUID for a VB.NET project.
            </summary>
        </member>
    </members>
</doc>
